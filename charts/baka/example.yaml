backupJobs:
  postgres-dev:
    type: "postgres"
    env:
      DATABASE_USER: ''
      DATABASE_PASSWORD: ''
      DATABASE_HOST: ''
      DATABASE_PORT: ''
      BUCKET_PREFIX: ''
      AWS_BUCKET: ''
      AWS_ACCESS_KEY_ID: ''
      AWS_SECRET_ACCESS_KEY: ''
      STORAGE_CLASS: ''
      IGNORE_DATABASES: 'ONEZONE_IA'
      #DATABASE_NAME: '' Backup only one database
      #FILE_NAME: '' Backup name (don't include extension)
    externalSecrets:
      - clusterStoreName: "aws-parameter-store"
        refSecretName: "aws-parameter-store"
        isUseProperty: false
        secrets:
          DATABASE_HOST: RDS_MASTER_HOST
          DATABASE_PORT: RDS_PORT
      - clusterStoreName: "aws-secrets-manager"
        refSecretName: "application-secret"
        isUseProperty: true
        secrets:
          DATABASE_PASSWORD: RDS_PASSWORD
          DATABASE_USER: RDS_USERNAME
    schedule: "* * * * *"
    failedJobsHistoryLimit: 1
    successfulJobsHistoryLimit: 30
    concurrencyPolicy: Allow
    restartPolicy: OnFailure
    ignoreDatabases:
      - "database_default"
      - "database_default2"

restoreJobs:
    postgres-dev:
      type: "postgres"
      env:
        FILE_URL: "https://storage.s3.amazonaws.com/backup/backup.dump"
        DATABASE_USER: ''
        DATABASE_PASSWORD: ''
        DATABASE_HOST: ''
        DATABASE_PORT: ''

auditJobs:
    postgres-dev:
      type: "postgres"
      env:
        FILE_URL: "https://storage.s3.amazonaws.com/backup/backup.dump"
        DATABASE_USER: ''
        DATABASE_PASSWORD: ''
        DATABASE_HOST: ''
        DATABASE_PORT: ''

